mod:
  贷前管理指派接受:
    searchable:
      指派方式: "way,string,n"
      状态: "status,string,n"
    list:
      指派流水号: string
      指派方式: string
      指派人: string
      指派接收人: string
      指派时间: string
      接收时间: string
      状态: string
      流程状态: sting

checkTemplate: &checkTemplate


workflow:
  资料收集:
    searchable:
      任务编号: string,n
      客户名称: string,n
      任务生成时间: date,n

    list:
      任务编号:
      客户号:
      客户名称:
      任务生成时间:
      要求完成时间:
      实际完成时间:
      客户经理:
      检查状态:

    flowType: clientManager

    flow:
      资料收集:
        type: input
        start: true
#        quarters: [] #允许经办的岗位ID #无用项
#        user: [] #允许经办的用户ID
        content:
          文件编号: fileId,string,n
          客户号: clientId,string,n
          客户名称: clientName,string,y
          客户经理: manager,User,y
          文件标签: fileTags,string,n,
          备注说明: info,string,n,
          收集文件:
            name: files,
            type: files,
            required: n
        next: 是否拒贷


      是否拒贷:
        type: check
#        quarters: []
#        order: 1 #order项无用
#        content:
        key: key #保存状态和备注时所用的键名, 通畅默认为key就可以
        ps: ps #是否需要备注, 如果没有, 则为空
        question: 是否拒贷
        states: #定义状态
          ok: #状态名OK
            item: 是 #状态选项
            condition: 1 #有一个人选了就生成该状态
            behavior: go('结束') #状态为该项的时候, 调用go函数 走向结束节点
          nonono: #状态名nonono
            item: 否
            condition: 1 #有一个人选了否就是该状态
            behavior: go('资料收集')
#          items: [是,否]
#          passItem: 是
        count: 1 #几个人审核
#          pass: 1
#          fail: 1
        next: [资料收集,结束] #有可能的走向, 即树的子叶

      结束:
        type: end
        end: true

  菜单权限申请:
    flow:

      发起权限申请:
        type: input
        start: true
        content:
          申请说明: apply,textarea,y

          资产类型:
            name: type
            type: select
            items: [表内,表外]
            required: y

          申请附件:
            type: files
            name: files
            required: n
        next: 判断表内/表外

      判断表内/表外:
        type: logic
        condition: getLastNode('发起权限申请').get('type') #判断条件
        time: 1 #循环触发周期
        result: #条件处理, 只在不为null的时候才处理
          表内: go('授信管理部审核')

          表外: go('风险资产管理部审核')

          else: #其余的走项

        next: [授信管理部审核,风险资产管理部审核]

      授信管理部审核:
        type: check
        key: key
        ps: ps
        question: 是否通过
        states:
          pass:
            item: 是
            condition: 1
            behavior: go('合规部审核')
          fail:
            item: 否
            condition: 1
            behavior: go('发起权限申请')
        count: 1
        next: []

      风险资产管理部审核:
        type: check
        key: key
        ps: ps
        question: 是否通过
        states:
          pass:
            item: 是
            condition: 1
            behavior: go('合规部审核')
          fail:
            item: 否
            condition: 1
            behavior: go('发起权限申请')
        count: 1
        next: []

      合规部审核:
        type: check
        key: key
        ps: ps
        question: 是否通过
        states:
          pass:
            item: 是
            condition: 1
            behavior: go('总领导班子审核')
          fail:
            item: 否
            condition: 1
            behavior: go('发起权限申请')
        count: 1
        next: []

      运营部审核:
        type: check
        key: key
        ps: ps
        question: 是否通过
        states:
          pass:
            item: 是
            condition: 1
            behavior: go('电子银行部确认')
          fail:
            item: 否
            condition: 1
            behavior: go('发起权限申请')
        count: 1
        next: []

      电子银行部确认:
        type: check
        key: key
        ps: ps
        question: 是否通过
        states:
          pass:
            item: 是
            condition: 1
            behavior: go('结束')

        count: 1
        next: []

      总领导班子审核:
        type: check
        key: key
        ps: ps
        question: 是否通过
        states:
          pass:
            item: 是
            condition: 1
            behavior: go('运营部审核')
          fail:
            item: 否
            condition: 1
            behavior: go('发起权限申请')
        count: 1
        next: []

      结束:
        type: end
        end: true


  贷后检查:
      searchable:
        任务编号: "string,n"
        客户名称: "string,n"
        任务生成时间: "string,n"

      list:
        任务编号: string
        客户号: string
        客户名称: string
        合同号: string
        任务生成时间: string
        要求完成时间: string
        客户经理: string
        业务类型: string
        状态: string

      flow:
        发起贷后流程:
          type: input #输入信息节点
          content:
            - 任务编号: "string,y" #英文ID为空，字符串类型，必填
              客户号: "string" #英文ID为空，字符串，不必填
              客户名称: "clientName,string,y" #英文ID为
              要求完成时间: "date,n" #日期时间类型 不必填
              要求完成时间2: "datetime,n" #精确时间类型，不必填
              客户类型: "radio,y" #单选类型
              业务类型: "checkbox,y" #多选类型
              t1: "client,y" #选择客户
              t2: "department" #选择部门
              t3: "user,n" #选择角色
              t4: "post" #选择岗位
        贷后检查填写:
          tpye: input #输入信息节点
          content:
            - ....

        审查:
          type: check #审核节点
          content:
            count: 2 #2人审核
            pass: 1 #1人同意即通过
        结束:
          type: end



        #逻辑节点示意
        test:
          type: logic
          if1:
            condition: #填写需要检查的REST请求地址
              ...
            action: #需要执行的行为（预先定义好）
              ...
          if2: #else if
            condition:
              ...
            action:
              ...
          if3:
          if4:
          else:
            action: #else没有行为条件，如果只有一个else而没有前置的if，那么视为没有

  贷后跟踪:
    flow:


manage:
  - cubi




